gm.reader <- function(file_loc, type){
if(!(type %in% c("gm", "metadata", "metadata_header")) == T){
stop("Must choose either 'gm', 'metadata' or 'metadata_header' for the 'type' parameter.")
}
if(file.exists(file_loc) == FALSE){
stop(paste(file_loc, "does not exist!", sep = " "), call. = FALSE)
}
if(type == 'gm'){
gm = as.matrix(read.csv(file_loc, sep = ","))
return(gm)
}
if(type == 'metadata'){
metadata = read.csv(file = file_loc, skip = 8, header = T, stringsAsFactors = F, check.names = F)
metadata = metadata[-nrow(metadata), ]
return(metadata)
}
if(type == 'metadata_header'){
metadata_header = read.csv(file = file_loc, nrows = 8, header = F, stringsAsFactors = F, check.names = F)
colnames(metadata_header) = c("Description", "Value")
return(metadata_header)
}
}
yoyo<- gm.reader("/Users/chardy/Desktop/icell8_dev/scripts/reproducibility_script/wiki/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv")
yoyo<- gm.reader("/Users/chardy/Desktop/icell8_dev/scripts/reproducibility_script/wiki/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv", type = 'gm')
gm.reader <- function(file_loc, type){
if(!(type %in% c("gm", "metadata", "metadata_header")) == T | missing(type) == T){
stop("Must choose either 'gm', 'metadata' or 'metadata_header' for the 'type' parameter.")
}
if(file.exists(file_loc) == FALSE){
stop(paste(file_loc, "does not exist!", sep = " "), call. = FALSE)
}
if(type == 'gm'){
gm = as.matrix(read.csv(file_loc, sep = ","))
return(gm)
}
if(type == 'metadata'){
metadata = read.csv(file = file_loc, skip = 8, header = T, stringsAsFactors = F, check.names = F)
metadata = metadata[-nrow(metadata), ]
return(metadata)
}
if(type == 'metadata_header'){
metadata_header = read.csv(file = file_loc, nrows = 8, header = F, stringsAsFactors = F, check.names = F)
colnames(metadata_header) = c("Description", "Value")
return(metadata_header)
}
}
yoyo<- gm.reader("/Users/chardy/Desktop/icell8_dev/scripts/reproducibility_script/wiki/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv")
gm.reader <- function(file_loc, type){
if(missing(type) == T | !(type %in% c("gm", "metadata", "metadata_header")) == T){
stop("Must choose either 'gm', 'metadata' or 'metadata_header' for the 'type' parameter.")
}
if(file.exists(file_loc) == FALSE){
stop(paste(file_loc, "does not exist!", sep = " "), call. = FALSE)
}
if(type == 'gm'){
gm = as.matrix(read.csv(file_loc, sep = ","))
return(gm)
}
if(type == 'metadata'){
metadata = read.csv(file = file_loc, skip = 8, header = T, stringsAsFactors = F, check.names = F)
metadata = metadata[-nrow(metadata), ]
return(metadata)
}
if(type == 'metadata_header'){
metadata_header = read.csv(file = file_loc, nrows = 8, header = F, stringsAsFactors = F, check.names = F)
colnames(metadata_header) = c("Description", "Value")
return(metadata_header)
}
}
yoyo<- gm.reader("/Users/chardy/Desktop/icell8_dev/scripts/reproducibility_script/wiki/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv")
gm.reader <- function(file_loc, type = NA){
if(!(type %in% c("gm", "metadata", "metadata_header")) == T){
stop("Must choose either 'gm', 'metadata' or 'metadata_header' for the 'type' parameter.")
}
if(file.exists(file_loc) == FALSE){
stop(paste(file_loc, "does not exist!", sep = " "), call. = FALSE)
}
if(type == 'gm'){
gm = as.matrix(read.csv(file_loc, sep = ","))
return(gm)
}
if(type == 'metadata'){
metadata = read.csv(file = file_loc, skip = 8, header = T, stringsAsFactors = F, check.names = F)
metadata = metadata[-nrow(metadata), ]
return(metadata)
}
if(type == 'metadata_header'){
metadata_header = read.csv(file = file_loc, nrows = 8, header = F, stringsAsFactors = F, check.names = F)
colnames(metadata_header) = c("Description", "Value")
return(metadata_header)
}
}
yoyo<- gm.reader("/Users/chardy/Desktop/icell8_dev/scripts/reproducibility_script/wiki/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv")
head(yoyo)
head(yoyo[,1:3])
metadata_test <- gm.reader("/Users/chardy/Desktop/icell8_dev/scripts/reproducibility_script/wiki/ex_data/raw_data/human/A375.scaled_100K.report.csv", type = "metadata")
metadata_test
metadata_head_test <- gm.reader("/Users/chardy/Desktop/icell8_dev/scripts/reproducibility_script/wiki/ex_data/raw_data/human/A375.scaled_100K.report.csv", type = "metadata_head")
metadata_header_test <- gm.reader("/Users/chardy/Desktop/icell8_dev/scripts/reproducibility_script/wiki/ex_data/raw_data/human/A375.scaled_100K.report.csv", type = "metadata_header")
head(metadata_header_test)
gm.log
?gm.log
library(icell8)
gm.log
?gm.log
?gm.nomr
?gm.norm
gm_test <- gm.reader("./ex_data/raw_data/human/dummy/A375.100K.withUMI.csv", type = "gm")
gm_test <- t(gm_test)
gm_test <- gm.reader("/Users/chardy/Desktop/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv", type = "gm")
gm_test <- t(gm_test)
gm_test <- gm.reader("/Users/chardy/Desktop/tests/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv", type = "gm")
gm_test <- t(gm_test)
head(gm_test[,1:3])
hist(colSums(gm_test))
hist(rowSums(gm_test))
hist(colSums(gm.norm(gm_test, method = "tps", scale = 1e6)))
hist(colSums(gm.norm(gm_test, method = "cc_mc")))
head(gm_test[,1:3])
cell_cov = colSums(gm)
norm_factor = cell_cov / median(cell_cov)
cell_cov = colSums(gm_test)
norm_factor = cell_cov / median(cell_cov)
cell_cov
cell_cov
dim(gm)
dim(gm_test)
norm_factor
median(cell_cov)
cell_cov
hist(colSums(gm_test))
hist(colSums(gm.norm(gm_test, method = "cc.cm")))
hist(colSums(gm.norm(gm_test, method = "cc.mc")))
hist(colSums(gm.norm(gm_test, method = "cc_mc")))
gm / norm_factor
gm_test / norm_factor
hist(colSums(gm.norm(gm_test, method = "cc_mc")))
hist(colSums(gm_test), add = T, col = 'red')
hist(colSums(gm.norm(gm_test, method = "cc_mc")), add =T, col = 'blue')
head(gm_test[,1:3])
gm.norm(gm_test, method = "cc_mc")[,1:3]
head(gm_test[,1:3])
head(gm.norm(gm_test, method = "cc_mc")[,1:3])
sum(gm.norm(gm_test, method = "cc_mc")[,1:3])
colsums(gm.norm(gm_test, method = "cc_mc")[,1:3])
colSums(gm.norm(gm_test, method = "cc_mc")[,1:3])
colSums(gm_test[,1:3])
cell_cov
norm_factor
36411 / 1.7067123
22433 / 1.0515140
26982 / 1.2647417
gm[,1:3]
head(gm_test[,1:3])
head(gm_test[,1:3] / norm_factor)
head(gm_test[,1:3] / norm_factor[1:3])
head(gm_test[,1:3])
head(gm_test[,1:3] / c(1, 100, 1000))
head(gm_test[,1:3] / c(1))
head(gm_test[,1:3] / c(1, 10))
t(norm_factor)
head(gm_test[,1:3] / t(norm_factor[1:3]))
head(gm_test[,1:3] / c(1, 100, 1000))
head(gm_test[,1:3])
dim(gm_test)
dim(gm_test[,1:3])
?sweep
gm <- head(gm_test[,1:3])
gm
gm.norm(gm)
gm.norm(gm, method = "cc_mc")
hist(gm)
hist(gm.norm, method = "cc_mc")
hist(gm.norm(gm, method = "cc_mc")
)
cell_cov = colSums(gm)
cell_cov
gm
norm_factor <- cell_cov / median(cell_cov )
norm_factor
gm / norm_factor
3/.5
t(gm) / norm_factor
gm
weep(gm, 2, norm_factor, FUN = '/')
gm
norm_factor
sweep(gm, 2, norm_factor, FUN = '/')
hist(sweep(gm, 2, norm_factor, FUN = '/'))
detch('package:icell8', unload = T)
detach('package:icell8', unload = T)
gm.norm
library(icell8)
gm.norm
hist(colSums(gm_test))
hist(colSums(gm.norm(gm_test, method = "cc_mc")))
head(gm.norm(gm_test, method = "cc_mc"))
colSums(gm.norm(gm_test, method = "cc_mc"))
dim(gm.norm(gm_test, method = "cc_mc"))
head(gm.norm(gm_test, method = "cc_mc"))
colSums(gm.norm(gm_test, method = "cc_mc"))
norm_factor = colSums(gm_test) / 1e6
norm_factor
gm_test / norm_factor
gm_test[,1:3] / norm_factor[,1:3]
sweep(gm_test, 2, norm_factor, FUN = '/')
colSums(sweep(gm_test, 2, norm_factor, FUN = '/'))
detach('package:icell8', unload = T)
yoyo <- gm.qc(gm)
library(icell8)
yoyo <- gm.qc(gm)
head(yoyo[,1:3])
head(yoyo)
head(gm)
yoyo <- gm.qc(gm_test)
head(yoyo)
colSums(yoyo)
gm.norm
colSums(gm)
colSums(gm_test)
plot(colSums(gm_test), colSums(yoyo))
gm_test <- gm.reader("./ex_data/raw_data/human/dummy/A375.100K.withUMI.csv", type = "gm")
gm_test <- t(gm_test)
gm_test <- gm.reader("/Users/chardy/Desktop/tests/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv", type = "gm")
gm_test <- t(gm_test)
colSums(gm_test)
yoyo <- gm.qc(gm_test)
colSums(yoyo)
?gm.qc
?gm.qc
??gm.qc
detach('package:icell8', unload = T)
library(icell8)
gm_test <- gm.reader("/Users/chardy/Desktop/tests/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv", type = "gm")
gm_test <- t(gm_test)
library(icell8)
gm_test <- gm.reader("/Users/chardy/Desktop/tests/ex_data/raw_data/human/dummy/A375.100K.withUMI.csv", type = "gm")
gm_test <- t(gm_test)
dim(gm_test)
?gm.qc
yoyo <- gm.qc(gm_test)
hecolSums(yoyo)
colSums(yoyo)
colSums(gm_test)
colSums(gm.norm(gm_test))
colSums(gm.norm(gm_test, method = "tps"))
colSums(gm.log(gm.norm(gm_test, method = "tps")))
clear
rm(list=ls())
